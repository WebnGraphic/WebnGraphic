datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(cuid())
  name          String
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  blogs         Blog[]
  role          String         @default("user")
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model Blog {
  id            String   @id @default(uuid())
  title         String
  content       String
  authorId      String   
  author        User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  category      String
  imageLink     String   
  imagePublicID String   
  isPopular     Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  published     Boolean  @default(false)
}
 

 
model Response {
  id        String   @id @default(uuid())
  name      String
  phone     String
  email     String   
  message   String
  interest  String
  createdAt DateTime @default(now())
}


model Review {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  rating    Int    
  comment   String
  approved  Boolean  @default(false) 
  createdAt DateTime @default(now())
}

model Testimonial {
  id        String   @id @default(uuid())
  name      String
  role      String
  company   String?  
  content   String
  service   String
  image     String?  
  published     Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model Portfolio {
  id            String   @id @default(cuid())
  title         String
  category      String
  images        Json
  client        String
  completeDate  DateTime
  featured      Boolean  @default(false)
  descriptions  String
  challenge     String
  solution      String
  result        String
  technologies  String [] 
  published     Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Project {
  id           String   @id @default(cuid())
  title        String
  mission      String
  category     String
  client       String
  completeDate DateTime
  demoUrl      String
  overView     String   @db.Text
  features     String[] @default([])
  technologies String[] @default([])
  testimonial  Json     // Single { quote: string, author: string } object
  images       Json[]   // Array of { url: string, publicId: string }
  featured     Boolean  @default(false)
  published    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
